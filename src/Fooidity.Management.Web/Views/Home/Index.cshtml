<div class="jumbotron">
    <h1>Fooidity</h1>
    <p class="lead">Fooidity was created to separate the deployment of code from the delivery of features. Fooidity makes this
        possible by allowing code changes to be placed behind code switches which can be enabled or disabled outside of a code deployment.
        Since code may be deployed without the convert of a change in behavior, deployments can occur at any time without synchronizing
        development teams to a safe checkpoint in the source control repository.
    </p>
    <p><a href="#" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Introduction</h2>
        <p>To meet the ever increasing customer demands, teams are working concurrently to add value to applications. 
        This can be difficult in a software-as-a-service (Saas) environment, where a single codebase is deployed to production.</p>
        <p><a class="btn btn-default" href="#">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Code Features</h2>
        <p>In <em>Fooidity</em>, a code feature represents code that is new to the application. This can be a new feature
        under development, an enhancement to an existing feature, or even a bug fix. Any code that changes the behavior 
        of the application currently in use by customers is a code feature. The <em>CodeFeature</em> interface is used 
        to denote a type that identifies the code feature itself./p>
        <p><a class="btn btn-default" href="#">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Code Switches</h2>
        <p>To selectively execute code based on a code feature state, a code switch is used. There are several default 
        code switches available in _Fooidity_ which can be used depending upon the requirements of the application.</p>
        <p><a class="btn btn-default" href="#">Learn more &raquo;</a></p>
    </div>
</div>
